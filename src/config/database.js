const mongoose = require('mongoose');

const connectDatabase = async () => {
  try {
    const mongoURI = process.env.MONGODB_URI;
    
    if (!mongoURI) {
      throw new Error('MONGODB_URI no est√° definida en las variables de entorno');
    }

    // Opciones actualizadas para Mongoose 8.x
    const options = {
      maxPoolSize: 10, // M√°ximo 10 conexiones simult√°neas
      serverSelectionTimeoutMS: 5000, // 5 segundos timeout
      socketTimeoutMS: 45000, // 45 segundos socket timeout
    };

    const conn = await mongoose.connect(mongoURI, options);

    console.log(`‚úÖ MongoDB Atlas conectado: ${conn.connection.host}`);
    console.log(`üìä Base de datos: ${conn.connection.name}`);

    // Event listeners para monitoreo
    mongoose.connection.on('connected', () => {
      console.log('üîó Mongoose conectado a MongoDB Atlas');
    });

    mongoose.connection.on('error', (err) => {
      console.error('‚ùå Error de conexi√≥n MongoDB:', err);
    });

    mongoose.connection.on('disconnected', () => {
      console.log('üîå Mongoose desconectado de MongoDB');
    });

    // Manejo de cierre graceful
    process.on('SIGINT', async () => {
      try {
        await mongoose.connection.close();
        console.log('üõë Conexi√≥n MongoDB cerrada por terminaci√≥n de aplicaci√≥n');
        process.exit(0);
      } catch (error) {
        console.error('‚ùå Error cerrando conexi√≥n MongoDB:', error);
        process.exit(1);
      }
    });

  } catch (error) {
    console.error('‚ùå Error conectando a MongoDB Atlas:', error.message);
    process.exit(1);
  }
};

module.exports = { connectDatabase };